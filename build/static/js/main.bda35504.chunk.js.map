{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/Notification.js","components/ErrorMsg.js","App.js","serviceWorker.js","index.js"],"names":["Filter","search","handleSearchChange","value","onChange","Person","id","name","number","deletePerson","onClick","Persons","persons","length","console","log","nameToShow","filter","person","toLowerCase","includes","map","Fragment","key","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","delete","statusText","put","Notification","message","className","ErrorMsg","errorMsg","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","setMessage","setErrorMsg","useEffect","personsService","initialPersons","event","target","preventDefault","find","window","confirm","findPerson","changedPerson","setTimeout","catch","error","p","returnedPerson","concat","returnedData","alert","copy","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bda35504.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ search, handleSearchChange }) => {\n  return (\n    <p>Filter shown with <span> </span>\n      <input value={search} onChange={handleSearchChange} />\n    </p>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = ({ id, name, number, deletePerson }) => {\n  return (\n    <>\n    <span>{name} {number}</span> <span><button onClick={() => deletePerson(id, name)}>Delete</button></span>\n    </>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, search, deletePerson }) => {\n  if (persons.length == null) {\n    return <div>Loading...</div>\n  }\n  else {\n  // Filter for search\n  console.log('hello', persons)\n  const nameToShow = persons.filter(person => \n    person.name.toLowerCase().includes(search.toLowerCase()))\n\n  // Map persons array data to rows\n  const rows = () => nameToShow.map(person =>\n    <React.Fragment key={person.name}>\n    <Person \n      id={person.id}\n      name={person.name} \n      number={person.number}\n      deletePerson={() => deletePerson(person.id, person.name)}\n    /><br />\n    </React.Fragment>\n  )\n  return (\n    <div>\n      {rows()}\n    </div>\n  )\n}\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({ addName, newName, handleNameChange, newNumber, handleNumberChange }) => {\n\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name:   <input value={newName} \n                        onChange={handleNameChange}\n        />\n      </div>\n      <div>\n        number: <input value={newNumber}\n                        onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n// Returns all persons in a promise\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n// Adds a new contact\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\n// Deletes contact\nconst deleteThis = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.statusText)\n}\n\n// Updates number\nconst update = (id, newNumber) => {\n  const request = axios.put(`${baseUrl}/${id}`, newNumber)\n  return request.then(response => response.data)\n}\n\n// Export is in a shorter form (getAll: getAll)\nexport default { getAll, create, deleteThis, update }","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"note\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorMsg = ({ errorMsg }) => {\n  if (errorMsg === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {errorMsg}\n    </div>\n  )\n}\n\nexport default ErrorMsg","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorMsg from './components/ErrorMsg'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState(\n    'Add a new name...'\n  )\n  const [ newNumber, setNewNumber ] = useState(\n    'Add a new number...'\n  )\n  const [ search, setNewSearch ] = useState(\n    ''\n  )\n  const [ message, setMessage ] = useState(null)\n  const [ errorMsg, setErrorMsg ] = useState(null)\n\n  // Get data from server with Axios using services/persons.js\n  // The Effect Hook lets you perform side effects in function components. \n  // Data fetching, setting up a subscription, and manually changing the DOM \n  // in React components are all examples of side effects.\n  useEffect(() => {\n    personsService\n      .getAll()\n        .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  // Handle input fields change event and state\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  // Handle input fields change event and state\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  // Handle input fields change event and state\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  // Adding a name (or changing number) to state array and db with services/persons.js\n  const addName = (event) => {\n    event.preventDefault()\n    if (persons.find( ({ name }) => name === newName )) {\n      if (window.confirm(`${newName} is already added to phonebook, \n        replace the old number with a new one?`)) {\n          const findPerson = persons.find( ({ name }) => name === newName )\n          const changedPerson = { ...findPerson, number: newNumber }\n          personsService\n            .update(findPerson.id, changedPerson)\n            .then(response => {\n              console.log('Update', response)\n              setPersons(persons.map(person => person.id !== findPerson.id ? person : response))\n              setMessage(\n                `'${findPerson.name}' has a new number now`\n                )\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n            })\n            .catch(error => {\n              setErrorMsg(\n                `Information of '${findPerson.name}' has already been removed from server`\n                )\n              setTimeout(() => {\n                console.log('Error: ', error)\n                setErrorMsg(null)\n              }, 5000)\n              setPersons(persons.filter(p => p.id !== findPerson.id))\n            })\n          setNewName('Add a new name...')\n          setNewNumber('Add a new number...')\n        } else {\n          setNewName('Add a new name...')\n          setNewNumber('Add a new number...')\n        }\n    }\n    else {\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      }\n      personsService\n        .create(nameObject)\n          .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('Add a new name...')\n          setNewNumber('Add a new number...')\n          setMessage(\n            `'${returnedPerson.name}' was added`\n            )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  // Deleting the contact details of a person\n  const deletePerson = (id, name) => {\n    // console.log('Attr', id, name)\n    if (window.confirm(`Do you really want to delete ${name}?`)) {\n    personsService\n      .deleteThis(id)\n      .then(returnedData => {\n        console.log('Delete statusText', returnedData)\n      })\n      .catch(error => {\n        alert(`the contact id '${id}' was already deleted from server`)\n        console.log('error', error)\n      })\n    let copy = persons.filter(person => person.id !== id)\n    setPersons(copy)\n    setMessage(\n      `'${name}' was removed`\n      )\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <ErrorMsg     errorMsg={errorMsg} />\n      <Filter       search={search} \n                    handleSearchChange={handleSearchChange} \n      />\n      <h2>Add a new</h2>\n      <PersonForm   addName={addName} \n                    newName={newName}\n                    handleNameChange={handleNameChange}\n                    newNumber={newNumber}\n                    handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons      persons={persons} \n                    search={search} \n                    deletePerson={deletePerson} \n      />\n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}